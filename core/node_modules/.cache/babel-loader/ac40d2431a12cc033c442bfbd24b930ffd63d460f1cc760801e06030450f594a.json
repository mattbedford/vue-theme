{"ast":null,"code":"export default {\n  name: 'HomeView',\n  data() {\n    return {\n      page: {\n        headline1: '',\n        textarea1: '',\n        image1: '',\n        headline2: '',\n        textarea2: null,\n        image2: '',\n        cta: '',\n        externalLink: null\n      },\n      reports: []\n    };\n  },\n  mounted() {\n    this.getPage();\n    this.getReports();\n  },\n  methods: {\n    async getReports() {\n      this.reports = [];\n      const url = `${this.rest_base}get-reports`;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.reports = result;\n      });\n    },\n    async getPage() {\n      const url = `${this.rest_base}get-page`;\n      const data = {\n        slug: 'reports'\n      };\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.page = result;\n      });\n    },\n    addToCart(reportId) {\n      this.$emit('addToCart', reportId);\n    },\n    removeFromCart(reportId) {\n      this.$emit('removeFromCart', reportId);\n    },\n    calcCHF(price) {\n      return `CHF ${parseFloat(price).toFixed(2)}`;\n    }\n  }\n};","map":{"version":3,"names":["name","data","page","headline1","textarea1","image1","headline2","textarea2","image2","cta","externalLink","reports","mounted","getPage","getReports","methods","url","rest_base","headers","credentials","nonce","fetch","method","then","result","json","slug","body","JSON","stringify","addToCart","reportId","$emit","removeFromCart","calcCHF","price","parseFloat","toFixed"],"sources":["src/views/ReportsView.vue"],"sourcesContent":["<template>\r\n    <div class=\"reports page-wrap\">\r\n      <section class=\"section1\">\r\n        <div class=\"reports-header\">\r\n          <h1>{{ page.headline1 }}</h1>\r\n        </div>\r\n\r\n        <div class=\"tags\">\r\n            <span>Luxury</span>\r\n            <span>Travel</span>\r\n            <span>Retail</span>\r\n            <span>Consumer</span>\r\n            <span>Home & living</span>\r\n        </div>\r\n      </section>\r\n      <section class=\"section2\" id=\"reports-section\">\r\n        <div class=\"container\">\r\n          <div class=\"list-reports\">\r\n            <div class=\"report\" v-for=\"report in reports\" :key=\"report.id\">\r\n              <router-link :to=\"{name: 'report' , params:{ slug: report.slug }}\">\r\n                <div class=\"report-img\">\r\n                  <span class=\"home-report-price\" v-html=\"calcCHF(report.price)\"></span>\r\n                  <img :src=\"report.cover_image\" alt=\"\">\r\n                </div>\r\n              </router-link>\r\n              <div class=\"report-content\">\r\n                <h3>{{ report.title }}</h3>\r\n                <p>{{ report.short_desc }}</p>\r\n                <div class=\"btns\">\r\n                  <router-link :to=\"{name: 'report' , params:{ slug: report.slug }}\" class=\"btn\">Learn more</router-link>\r\n                  <button v-if=\"$root.inCart.includes(report.id)\" class=\"btn bad\" @click=\"removeFromCart(report.id)\">Remove from cart</button>\r\n                  <button v-else class=\"btn\" @click=\"addToCart(report.id)\">Add to cart</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HomeView',\r\n  \r\n    data() {\r\n      return {\r\n        page: {\r\n          headline1: '',\r\n          textarea1: '',\r\n          image1: '',\r\n          headline2: '',\r\n          textarea2: null,\r\n          image2: '',\r\n          cta: '',\r\n          externalLink: null,\r\n        },\r\n        reports: [],\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getPage();\r\n      this.getReports();\r\n    },\r\n    methods: {\r\n      async getReports() {\r\n        this.reports = [];\r\n        const url = `${this.rest_base}get-reports`;\r\n        const headers = {\r\n          credentials: 'same-origin',\r\n          'Content-Type': 'application/json',\r\n          'X-WP-Nonce': this.nonce,\r\n        };\r\n        fetch(url, { method: 'GET', headers })\r\n          .then((result) => result.json())\r\n          .then((result) => { this.reports = result; });\r\n      },\r\n      async getPage() {\r\n        const url = `${this.rest_base}get-page`;\r\n        const data = { slug: 'reports' };\r\n        const headers = {\r\n          credentials: 'same-origin',\r\n          'Content-Type': 'application/json',\r\n          'X-WP-Nonce': this.nonce,\r\n        };\r\n        fetch(url, { method: 'POST', headers, body: JSON.stringify(data) })\r\n          .then((result) => result.json())\r\n          .then((result) => { this.page = result; });\r\n      },\r\n      addToCart(reportId) {\r\n        this.$emit('addToCart', reportId);\r\n      },\r\n      removeFromCart(reportId) {\r\n        this.$emit('removeFromCart', reportId);\r\n      },\r\n      calcCHF(price) {\r\n        return `CHF ${parseFloat(price).toFixed(2)}`;\r\n      },\r\n    },\r\n  }\r\n  </script>\r\n  "],"mappings":"AA0CA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,IAAA;QACAC,SAAA;QACAC,SAAA;QACAC,MAAA;QACAC,SAAA;QACAC,SAAA;QACAC,MAAA;QACAC,GAAA;QACAC,YAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA,KAAAH,OAAA;MACA,MAAAK,GAAA,WAAAC,SAAA;MACA,MAAAC,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAM,MAAA;QAAAJ;MAAA,GACAK,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QAAA,KAAAb,OAAA,GAAAa,MAAA;MAAA;IACA;IACA,MAAAX,QAAA;MACA,MAAAG,GAAA,WAAAC,SAAA;MACA,MAAAhB,IAAA;QAAAyB,IAAA;MAAA;MACA,MAAAR,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAM,MAAA;QAAAJ,OAAA;QAAAS,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAA5B,IAAA;MAAA,GACAsB,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QAAA,KAAAtB,IAAA,GAAAsB,MAAA;MAAA;IACA;IACAM,UAAAC,QAAA;MACA,KAAAC,KAAA,cAAAD,QAAA;IACA;IACAE,eAAAF,QAAA;MACA,KAAAC,KAAA,mBAAAD,QAAA;IACA;IACAG,QAAAC,KAAA;MACA,cAAAC,UAAA,CAAAD,KAAA,EAAAE,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}