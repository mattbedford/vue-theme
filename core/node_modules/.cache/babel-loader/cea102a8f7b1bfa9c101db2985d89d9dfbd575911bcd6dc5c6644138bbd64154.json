{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ThankYouView',\n  data() {\n    return {\n      ref: null,\n      order: []\n    };\n  },\n  mounted() {\n    if (this.$root.ref) {\n      this.ref = this.$root.ref;\n      this.getOrderSummary();\n    } else {\n      this.$router.push({\n        name: 'home'\n      });\n    }\n  },\n  methods: {\n    getOrderSummary: async function () {\n      const url = `${this.rest_base}order-summary`;\n      const data = {\n        ref: this.ref\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.order = result;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","ref","order","mounted","$root","getOrderSummary","$router","push","methods","url","rest_base","headers","credentials","nonce","fetch","method","body","JSON","stringify","then","result","json"],"sources":["src/views/ThankYouView.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-wrap\">\r\n        <section class=\"section1\">\r\n            <div class=\"col col1\">\r\n                <h1>Thank you!</h1>\r\n                <p>Your order was submitted successfully and your reports will be sent to the email address you provided within a few minutes.</p>\r\n                <p>Please remember to check your spam folder and if you have any issues at all, feel free to reach out to us at info@dagora.ch</p>\r\n                <p>Thank you for trusting our reports.</p>\r\n            </div>\r\n            <div class=\"col col2\">\r\n                <div class=\"order-details-wrap\">\r\n                    <h3>Your order details</h3>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order reference:</h5>\r\n                        <span>{{ ref }} made on {{ order.order_date }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order total:</h5>\r\n                        <span>{{ order.order_total }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Payment method:</h5>\r\n                        <span>{{ order.payment_method }}</span>\r\n                        <span v-if=\"order.coupon_code\">({{ order.coupon_code }})</span>\r\n                    </div>\r\n                    <div>\r\n                        <h5>Order items:</h5>\r\n                        <ul>\r\n                            <li v-for=\"(item, index) in order.order_items\" :key=\"index\"></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ThankYouView',\r\n    data() {\r\n        return {\r\n            ref: null,\r\n            order: [],\r\n        }\r\n    },\r\n    mounted() {\r\n        if(this.$root.ref) {\r\n            this.ref = this.$root.ref;\r\n            this.getOrderSummary();\r\n        } else {\r\n            this.$router.push({ name: 'home' });\r\n        }\r\n    },\r\n    methods: {\r\n        getOrderSummary: async function() {\r\n            const url = `${this.rest_base}order-summary`;\r\n            const data = {\r\n                ref: this.ref,\r\n            };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    this.order = result;\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":";AAsCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,KAAA,CAAAH,GAAA;MACA,KAAAA,GAAA,QAAAG,KAAA,CAAAH,GAAA;MACA,KAAAI,eAAA;IACA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAR,IAAA;MAAA;IACA;EACA;EACAS,OAAA;IACAH,eAAA,iBAAAA,CAAA;MACA,MAAAI,GAAA,WAAAC,SAAA;MACA,MAAAV,IAAA;QACAC,GAAA,OAAAA;MACA;MACA,MAAAU,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAM,MAAA;QAAAJ,OAAA;QAAAK,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAlB,IAAA;MAAA,GACAmB,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QACA,KAAAlB,KAAA,GAAAkB,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}