{"ast":null,"code":"export default {\n  name: \"SuccessPreDownload\",\n  data() {\n    return {\n      page: {\n        headline1: '',\n        textarea1: '',\n        image1: '',\n        headline2: '',\n        textarea2: null,\n        image2: '',\n        cta: '',\n        externalLink: null\n      },\n      items: []\n    };\n  },\n  mounted() {\n    this.doStripeConfirm();\n    this.getPage();\n  },\n  methods: {\n    async getPage() {\n      const url = `${this.rest_base}get-page`;\n      const data = {\n        slug: 'success'\n      };\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.page = result;\n      });\n    },\n    doStripeConfirm: async function () {\n      if (!this.$route.query.session || !this.$route.query.email) return;\n      const stripeId = this.$route.query.session;\n      const emailId = this.$route.query.email;\n      const url = `${this.rest_base}stripe-download-check`;\n      const data = {\n        session_id: stripeId,\n        email: emailId\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","page","headline1","textarea1","image1","headline2","textarea2","image2","cta","externalLink","items","mounted","doStripeConfirm","getPage","methods","url","rest_base","slug","headers","credentials","nonce","fetch","method","body","JSON","stringify","then","result","json","$route","query","session","email","stripeId","emailId","session_id"],"sources":["src/views/SuccessPreDownload.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-wrap success\">\r\n        <section class=\"section1\">\r\n            <div class=\"col col1\">\r\n                <h1 class=\"section-title\" v-html=\"page.headline1\"></h1>\r\n                <p v-html=\"page.textarea1\"></p>\r\n                <RouterLink to=\"/\"><button class=\"btn\">Go to home page</button></RouterLink>\r\n            </div>\r\n            <div class=\"col col2\">\r\n                <img :src=\"page.image1\" alt=\"Person celebrating after receiving his DagorÃ  report\">\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SuccessPreDownload\",\r\n\r\n  data() {\r\n        return {\r\n          page: {\r\n            headline1: '',\r\n            textarea1: '',\r\n            image1: '',\r\n            headline2: '',\r\n            textarea2: null,\r\n            image2: '',\r\n            cta: '',\r\n            externalLink: null,\r\n          },\r\n          items: [],\r\n        };\r\n    },\r\n    mounted() {\r\n      this.doStripeConfirm();\r\n      this.getPage();\r\n    },\r\n    methods: {\r\n      async getPage() {\r\n          const url = `${this.rest_base}get-page`;\r\n          const data = { slug: 'success' };\r\n          const headers = {\r\n            credentials: 'same-origin',\r\n            'Content-Type': 'application/json',\r\n            'X-WP-Nonce': this.nonce,\r\n          };\r\n          fetch(url, { method: 'POST', headers, body: JSON.stringify(data) })\r\n            .then((result) => result.json())\r\n            .then((result) => { this.page = result; });\r\n        },\r\n        doStripeConfirm: async function() {\r\n\r\n            if(!this.$route.query.session || !this.$route.query.email) return;\r\n            \r\n            const stripeId = this.$route.query.session;\r\n            const emailId = this.$route.query.email;\r\n\r\n            const url = `${this.rest_base}stripe-download-check`;\r\n            const data = {\r\n                session_id: stripeId,\r\n                email: emailId,\r\n            };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n        },\r\n      },\r\n};\r\n\r\n</script>"],"mappings":"AAgBA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,IAAA;QACAC,SAAA;QACAC,SAAA;QACAC,MAAA;QACAC,SAAA;QACAC,SAAA;QACAC,MAAA;QACAC,GAAA;QACAC,YAAA;MACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,eAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,WAAAC,SAAA;MACA,MAAAhB,IAAA;QAAAiB,IAAA;MAAA;MACA,MAAAC,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAN,GAAA;QAAAO,MAAA;QAAAJ,OAAA;QAAAK,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAzB,IAAA;MAAA,GACA0B,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QAAA,KAAA1B,IAAA,GAAA0B,MAAA;MAAA;IACA;IACAf,eAAA,iBAAAA,CAAA;MAEA,UAAAiB,MAAA,CAAAC,KAAA,CAAAC,OAAA,UAAAF,MAAA,CAAAC,KAAA,CAAAE,KAAA;MAEA,MAAAC,QAAA,QAAAJ,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,MAAAG,OAAA,QAAAL,MAAA,CAAAC,KAAA,CAAAE,KAAA;MAEA,MAAAjB,GAAA,WAAAC,SAAA;MACA,MAAAhB,IAAA;QACAmC,UAAA,EAAAF,QAAA;QACAD,KAAA,EAAAE;MACA;MACA,MAAAhB,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAN,GAAA;QAAAO,MAAA;QAAAJ,OAAA;QAAAK,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAzB,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}