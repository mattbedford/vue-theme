{"ast":null,"code":"import PurchaseForm from '@/components/PurchaseForm.vue';\nexport default {\n  name: \"SingleReportView\",\n  components: {\n    PurchaseForm\n  },\n  data() {\n    return {\n      items: []\n    };\n  },\n  created() {\n    if (this.$root.inCart && this.$root.inCart.length > 0) this.getCartItems();\n  },\n  methods: {\n    removeFromCart(reportId, index) {\n      this.$emit(\"removeFromCart\", reportId);\n      this.items.splice(index, 1);\n    },\n    getCartItems: async function () {\n      const cartItems = JSON.stringify({\n        cartItems: this.$root.inCart\n      });\n      const url = `${this.rest_base}cart`;\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: cartItems\n      }).then(result => result.json()).then(result => {\n        this.items = result;\n      });\n    }\n  }\n};","map":{"version":3,"names":["PurchaseForm","name","components","data","items","created","$root","inCart","length","getCartItems","methods","removeFromCart","reportId","index","$emit","splice","cartItems","JSON","stringify","url","rest_base","headers","credentials","nonce","fetch","method","body","then","result","json"],"sources":["src/views/CartView.vue"],"sourcesContent":["<template>\r\n\r\n      <div class=\"cart page-wrap\">\r\n        <section class=\"section1\">\r\n            <div class=\"col col1\">\r\n                <div v-if=\"items && items.length > 0\" class=\"full-cart\">\r\n                  <div class=\"cart-item\" v-for=\"(lineItem, index) in items\" :key=\"index\">\r\n                    <img :src=\"lineItem.cover_image\">\r\n                    <h4 v-html=\"lineItem.title\"></h4>\r\n                    <button class=\"btn bad\" @click=\"removeFromCart(lineItem.id, index)\">Remove</button>\r\n                    <h4 v-html=\"lineItem.price\"></h4>\r\n                  </div>\r\n                </div>\r\n                <div v-else class=\"empty-cart\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><circle cx=\"176\" cy=\"416\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"/><circle cx=\"400\" cy=\"416\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M48 80h64l48 272h256\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M160 288h249.44a8 8 0 0 0 7.85-6.43l28.8-144a8 8 0 0 0-7.85-9.57H128\"/></svg>\r\n                </div>\r\n            </div>\r\n            <div class=\"col col2\">\r\n              <router-link :to=\"{name: 'home', hash: '#reports-section'}\">\r\n                    <button class=\"back-to\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"48\" d=\"M244 400 100 256l144-144M120 256h292\"/></svg>\r\n                        Back to reports\r\n                    </button>\r\n                </router-link>\r\n                <h1>Cart</h1>\r\n                <PurchaseForm />\r\n            </div>\r\n        </section>\r\n      </div>\r\n  </template>\r\n  \r\n\r\n<script>\r\nimport PurchaseForm from '@/components/PurchaseForm.vue';\r\n\r\nexport default {\r\n    name: \"SingleReportView\",\r\n    components: { PurchaseForm },\r\n    data() {\r\n        return {\r\n            items: [],\r\n        };\r\n    },\r\n    created() {\r\n        if (this.$root.inCart && this.$root.inCart.length > 0)\r\n            this.getCartItems();\r\n    },\r\n    methods: {\r\n        removeFromCart(reportId, index) {\r\n            this.$emit(\"removeFromCart\", reportId);\r\n            this.items.splice(index, 1);\r\n        },\r\n        getCartItems: async function () {\r\n            const cartItems = JSON.stringify({ cartItems: this.$root.inCart });\r\n            const url = `${this.rest_base}cart`;\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: cartItems })\r\n                .then((result) => result.json())\r\n                .then((result) => { this.items = result; });\r\n        },\r\n    },\r\n}\r\n\r\n\r\n</script>"],"mappings":"AAiCA,OAAAA,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,KAAA,CAAAC,MAAA,SAAAD,KAAA,CAAAC,MAAA,CAAAC,MAAA,MACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAC,eAAAC,QAAA,EAAAC,KAAA;MACA,KAAAC,KAAA,mBAAAF,QAAA;MACA,KAAAR,KAAA,CAAAW,MAAA,CAAAF,KAAA;IACA;IACAJ,YAAA,iBAAAA,CAAA;MACA,MAAAO,SAAA,GAAAC,IAAA,CAAAC,SAAA;QAAAF,SAAA,OAAAV,KAAA,CAAAC;MAAA;MACA,MAAAY,GAAA,WAAAC,SAAA;MACA,MAAAC,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAM,MAAA;QAAAJ,OAAA;QAAAK,IAAA,EAAAV;MAAA,GACAW,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QAAA,KAAAxB,KAAA,GAAAwB,MAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}