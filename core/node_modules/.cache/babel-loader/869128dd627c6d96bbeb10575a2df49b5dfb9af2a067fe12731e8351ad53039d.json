{"ast":null,"code":"export default {\n  name: 'ThankYouView',\n  data() {\n    return {\n      ref: null,\n      method: null,\n      order: [],\n      page: {\n        headline1: '',\n        textarea1: '',\n        headline2: '',\n        textarea2: null,\n        cta: '',\n        externalLink: null\n      },\n      downloadables: []\n    };\n  },\n  mounted() {\n    if (this.$route.query.order) {\n      this.ref = this.$route.query.order;\n      this.method = 'coupon';\n    }\n    if (this.$route.query.session) {\n      this.ref = this.$route.query.session;\n      this.method = 'stripe';\n    }\n    this.getPage();\n    this.getOrderSummary();\n  },\n  methods: {\n    getOrderSummary: async function () {\n      const url = `${this.rest_base}order-summary`;\n      const data = {\n        ref: this.ref\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.order = result;\n      }).then(result => {\n        if (this.method === 'coupon') {\n          this.doCouponCheck(result.coupon_code);\n        }\n        if (this.method === 'stripe') {\n          this.doStripeCheck();\n        }\n      });\n    },\n    doStripeCheck: async function () {},\n    doCouponCheck: async function () {},\n    getPage: async function () {\n      const url = `${this.rest_base}get-page`;\n      const data = {\n        slug: 'thank-you'\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.page = result;\n      });\n    },\n    downloadFiles: async function () {\n      const url = `${this.rest_base}download-files`;\n      const data = {\n        ref: this.ref\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        if (Array.isArray(result.files)) {\n          this.downloadables = result.files;\n        } else {\n          this.doCriticalError();\n        }\n      });\n    },\n    doCriticalError: function () {\n      alert(\"Sorry. Looks like a critical error has occured. Please contact us for assistance.\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","ref","method","order","page","headline1","textarea1","headline2","textarea2","cta","externalLink","downloadables","mounted","$route","query","session","getPage","getOrderSummary","methods","url","rest_base","headers","credentials","nonce","fetch","body","JSON","stringify","then","result","json","doCouponCheck","coupon_code","doStripeCheck","slug","downloadFiles","Array","isArray","files","doCriticalError","alert"],"sources":["src/views/ThankYouView.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-wrap\">\r\n        <section class=\"section1\">\r\n            <div class=\"col col1\">\r\n                <h1 class=\"section-title\">{{ page.headline1 }}</h1>\r\n                <div v-html=\"page.textarea1\"></div>\r\n                <div v-html=\"page.textarea2\"></div>\r\n            </div>\r\n            <div class=\"col col2\">\r\n                <div class=\"order-details-wrap\">\r\n                    <h3>Your order details</h3>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order reference:</h5>\r\n                        <span>{{ order.order_id }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order date: </h5>\r\n                        <span>{{ order.order_date }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order total: </h5>\r\n                        <span>CHF {{ order.order_total }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Payment method: </h5>\r\n                        <span>{{ order.payment_method }}</span>\r\n                        <span v-if=\"order.coupon_code\"> ({{ order.coupon_code }})</span>\r\n                    </div>\r\n                    <div class=\"order-summary-list\">\r\n                        <h5>Order items:</h5>\r\n                        <ul>\r\n                            <li v-for=\"(item, index) in order.order_items\" :key=\"index\">{{ item }}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ThankYouView',\r\n    data() {\r\n        return {\r\n            ref: null,\r\n            method: null,\r\n            order: [],\r\n            page: {\r\n                headline1: '',\r\n                textarea1: '',\r\n                headline2: '',\r\n                textarea2: null,\r\n                cta: '',\r\n                externalLink: null,\r\n            },\r\n            downloadables: [],\r\n        }\r\n    },\r\n    mounted() {\r\n        if(this.$route.query.order) {\r\n            this.ref = this.$route.query.order;\r\n            this.method = 'coupon';\r\n        }\r\n        if(this.$route.query.session) {\r\n            this.ref = this.$route.query.session;\r\n            this.method = 'stripe';\r\n        }\r\n        this.getPage();\r\n        this.getOrderSummary();\r\n    },\r\n    methods: {\r\n        getOrderSummary: async function() {\r\n            const url = `${this.rest_base}order-summary`;\r\n            const data = {\r\n                ref: this.ref,\r\n            };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    this.order = result;\r\n                })\r\n                .then((result) => { \r\n                    \r\n                    if(this.method === 'coupon') {\r\n                        this.doCouponCheck(result.coupon_code);\r\n                    }\r\n\r\n                    if(this.method === 'stripe') {\r\n                        this.doStripeCheck();\r\n                    }\r\n\r\n                });\r\n        },\r\n        doStripeCheck: async function() {\r\n\r\n            \r\n        },\r\n        doCouponCheck: async function() {\r\n\r\n\r\n        },\r\n        getPage: async function() {\r\n            const url = `${this.rest_base}get-page`;\r\n            const data = { slug: 'thank-you' };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { this.page = result; });\r\n        },\r\n        downloadFiles: async function() {\r\n            const url = `${this.rest_base}download-files`;\r\n            const data = { ref: this.ref,  };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    if(Array.isArray(result.files)) {\r\n                        this.downloadables = result.files;\r\n                    } else {\r\n                        this.doCriticalError();\r\n                    }\r\n                });\r\n        },\r\n        doCriticalError: function() {\r\n            alert(\"Sorry. Looks like a critical error has occured. Please contact us for assistance.\");\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"AAyCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,MAAA;MACAC,KAAA;MACAC,IAAA;QACAC,SAAA;QACAC,SAAA;QACAC,SAAA;QACAC,SAAA;QACAC,GAAA;QACAC,YAAA;MACA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAX,KAAA;MACA,KAAAF,GAAA,QAAAY,MAAA,CAAAC,KAAA,CAAAX,KAAA;MACA,KAAAD,MAAA;IACA;IACA,SAAAW,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAd,GAAA,QAAAY,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAb,MAAA;IACA;IACA,KAAAc,OAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,eAAA,iBAAAA,CAAA;MACA,MAAAE,GAAA,WAAAC,SAAA;MACA,MAAApB,IAAA;QACAC,GAAA,OAAAA;MACA;MACA,MAAAoB,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAjB,MAAA;QAAAmB,OAAA;QAAAI,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAA3B,IAAA;MAAA,GACA4B,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QACA,KAAA1B,KAAA,GAAA0B,MAAA;MACA,GACAD,IAAA,CAAAC,MAAA;QAEA,SAAA3B,MAAA;UACA,KAAA6B,aAAA,CAAAF,MAAA,CAAAG,WAAA;QACA;QAEA,SAAA9B,MAAA;UACA,KAAA+B,aAAA;QACA;MAEA;IACA;IACAA,aAAA,iBAAAA,CAAA,GAGA;IACAF,aAAA,iBAAAA,CAAA,GAGA;IACAf,OAAA,iBAAAA,CAAA;MACA,MAAAG,GAAA,WAAAC,SAAA;MACA,MAAApB,IAAA;QAAAkC,IAAA;MAAA;MACA,MAAAb,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAjB,MAAA;QAAAmB,OAAA;QAAAI,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAA3B,IAAA;MAAA,GACA4B,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QAAA,KAAAzB,IAAA,GAAAyB,MAAA;MAAA;IACA;IACAM,aAAA,iBAAAA,CAAA;MACA,MAAAhB,GAAA,WAAAC,SAAA;MACA,MAAApB,IAAA;QAAAC,GAAA,OAAAA;MAAA;MACA,MAAAoB,OAAA;QACAC,WAAA;QACA;QACA,mBAAAC;MACA;MACAC,KAAA,CAAAL,GAAA;QAAAjB,MAAA;QAAAmB,OAAA;QAAAI,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAA3B,IAAA;MAAA,GACA4B,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,MAAA;QACA,IAAAO,KAAA,CAAAC,OAAA,CAAAR,MAAA,CAAAS,KAAA;UACA,KAAA3B,aAAA,GAAAkB,MAAA,CAAAS,KAAA;QACA;UACA,KAAAC,eAAA;QACA;MACA;IACA;IACAA,eAAA,WAAAA,CAAA;MACAC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}