{"ast":null,"code":"export default {\n  name: 'ThankYouView',\n  data() {\n    return {\n      ref: null,\n      method: null,\n      order: [],\n      page: {\n        headline1: '',\n        textarea1: '',\n        headline2: '',\n        textarea2: null,\n        cta: '',\n        externalLink: null\n      },\n      downloadables: []\n    };\n  },\n  mounted() {\n    if (this.$route.query.order) {\n      this.ref = this.$route.query.order;\n      this.code = this.$route.query.coupon;\n      this.method = 'coupon';\n    }\n    if (this.$route.query.session) {\n      this.ref = this.$route.query.order;\n      this.session = this.$route.query.session;\n      this.method = 'stripe';\n    }\n    this.getPage();\n    this.getOrderSummary();\n  },\n  computed: {\n    decodeBase64: function (s) {\n      var e = {},\n        i,\n        b = 0,\n        c,\n        x,\n        l = 0,\n        a,\n        r = '',\n        w = String.fromCharCode,\n        L = s.length;\n      var A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      for (i = 0; i < 64; i++) {\n        e[A.charAt(i)] = i;\n      }\n      for (x = 0; x < L; x++) {\n        c = e[s.charAt(x)];\n        b = (b << 6) + c;\n        l += 6;\n        while (l >= 8) {\n          ((a = b >>> (l -= 8) & 0xff) || x < L - 2) && (r += w(a));\n        }\n      }\n      return r;\n    }\n  },\n  methods: {\n    calcCHF(price) {\n      return `CHF ${parseFloat(price).toFixed(2)}`;\n    },\n    getOrderSummary: async function () {\n      const url = `${this.rest_base}order-summary`;\n      const data = {\n        ref: this.ref\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.order = result;\n      }).then(() => {\n        if (this.method === 'coupon') {\n          this.doCouponCheck(this.order.coupon_code);\n        }\n        if (this.method === 'stripe') {\n          this.doStripeCheck();\n        }\n      });\n    },\n    doStripeCheck: async function () {\n      // Does order id match the one in stripe session?\n      const url = `${this.rest_base}stripe-check`;\n      const data = {\n        session_id: this.session,\n        order_id: this.ref\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        if (result.status === 'success') {\n          this.downloadFiles();\n        } else {\n          this.doCriticalError();\n        }\n      });\n    },\n    doCouponCheck: function () {\n      // Does given coupon code match the one in order?\n      if (this.code !== this.order.coupon_code) {\n        this.doCriticalError();\n      }\n      this.downloadFiles();\n    },\n    getPage: async function () {\n      const url = `${this.rest_base}get-page`;\n      const data = {\n        slug: 'thank-you'\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        this.page = result;\n      });\n    },\n    downloadFiles: async function () {\n      const url = `${this.rest_base}download-files`;\n      const check = this.method === 'coupon' ? this.order.coupon_code : this.session;\n      const data = {\n        ref: this.ref,\n        method: this.method,\n        check: check\n      };\n      const headers = {\n        credentials: \"same-origin\",\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": this.nonce\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n      }).then(result => result.json()).then(result => {\n        if (Array.isArray(result)) {\n          this.downloadables = result.files;\n        } else {\n          this.doCriticalError();\n        }\n      });\n    },\n    doCriticalError: function () {\n      alert(\"Sorry. Looks like a critical error has occured. Please contact us for assistance.\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","ref","method","order","page","headline1","textarea1","headline2","textarea2","cta","externalLink","downloadables","mounted","$route","query","code","coupon","session","getPage","getOrderSummary","computed","decodeBase64","s","e","i","b","c","x","l","a","r","w","String","fromCharCode","L","length","A","charAt","methods","calcCHF","price","parseFloat","toFixed","url","rest_base","headers","credentials","nonce","fetch","body","JSON","stringify","then","result","json","doCouponCheck","coupon_code","doStripeCheck","session_id","order_id","status","downloadFiles","doCriticalError","slug","check","Array","isArray","files","alert"],"sources":["src/views/ThankYouView.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-wrap\">\r\n        <section class=\"section1\">\r\n            <div class=\"col col1\">\r\n                <h1 class=\"section-title\">{{ page.headline1 }}</h1>\r\n                <div v-html=\"page.textarea1\"></div>\r\n                <div v-html=\"page.textarea2\"></div>\r\n                <div class=\"results-box\" v-if=\"downloadables\">\r\n                    <span v-for=\"(item, index) in downloadables\" :key=\"index\" v-html=\"decodeBase64(item)\">\r\n                        \r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col col2\">\r\n                <div class=\"order-details-wrap\">\r\n                    <h3>Your order details</h3>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order reference:</h5>\r\n                        <span>{{ order.order_id }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order date: </h5>\r\n                        <span>{{ order.order_date }}</span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Order total: </h5>\r\n                        <span v-html=\"calcCHF(order.order_total)\"></span>\r\n                    </div>\r\n                    <div class=\"order-summary-item\">\r\n                        <h5>Payment method: </h5>\r\n                        <span>{{ order.payment_method }}&nbsp;</span>\r\n                        <span v-if=\"order.coupon_code\">({{ order.coupon_code }})</span>\r\n                    </div>\r\n                    <div class=\"order-summary-list\">\r\n                        <h5>Order items:</h5>\r\n                        <ul>\r\n                            <li v-for=\"(item, index) in order.order_items\" :key=\"index\">{{ item }}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ThankYouView',\r\n    data() {\r\n        return {\r\n            ref: null,\r\n            method: null,\r\n            order: [],\r\n            page: {\r\n                headline1: '',\r\n                textarea1: '',\r\n                headline2: '',\r\n                textarea2: null,\r\n                cta: '',\r\n                externalLink: null,\r\n            },\r\n            downloadables: [],\r\n        }\r\n    },\r\n    mounted() {\r\n        if(this.$route.query.order) {\r\n            this.ref = this.$route.query.order;\r\n            this.code = this.$route.query.coupon;\r\n            this.method = 'coupon';\r\n        }\r\n        if(this.$route.query.session) {\r\n            this.ref = this.$route.query.order;\r\n            this.session = this.$route.query.session;\r\n            this.method = 'stripe';\r\n        }\r\n        this.getPage();\r\n        this.getOrderSummary();\r\n    },\r\n    computed: {\r\n        decodeBase64: function(s) {\r\n            var e={},i,b=0,c,x,l=0,a,r='',w=String.fromCharCode,L=s.length;\r\n            var A=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n            for(i=0;i<64;i++){e[A.charAt(i)]=i;}\r\n            for(x=0;x<L;x++){\r\n                c=e[s.charAt(x)];b=(b<<6)+c;l+=6;\r\n                while(l>=8){((a=(b>>>(l-=8))&0xff)||(x<(L-2)))&&(r+=w(a));}\r\n            }\r\n            return r;\r\n        },\r\n    },\r\n    methods: {\r\n        calcCHF(price) {\r\n            return `CHF ${parseFloat(price).toFixed(2)}`;\r\n        },\r\n        getOrderSummary: async function() {\r\n            const url = `${this.rest_base}order-summary`;\r\n            const data = {\r\n                ref: this.ref,\r\n            };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    this.order = result;\r\n                })\r\n                .then(() => { \r\n                    \r\n                    if(this.method === 'coupon') {\r\n                        this.doCouponCheck(this.order.coupon_code);\r\n                    }\r\n\r\n                    if(this.method === 'stripe') {\r\n                        this.doStripeCheck();\r\n                    }\r\n\r\n                });\r\n        },\r\n        doStripeCheck: async function() {\r\n            // Does order id match the one in stripe session?\r\n            const url = `${this.rest_base}stripe-check`;\r\n            const data = {\r\n                session_id: this.session,\r\n                order_id: this.ref,\r\n            };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    if(result.status === 'success') {\r\n                        this.downloadFiles();\r\n                    } else {\r\n                        this.doCriticalError();\r\n                    }\r\n                });\r\n        },\r\n        doCouponCheck: function() {\r\n            // Does given coupon code match the one in order?\r\n            if(this.code !== this.order.coupon_code) {\r\n                this.doCriticalError();\r\n            }\r\n            this.downloadFiles();\r\n\r\n        },\r\n        getPage: async function() {\r\n            const url = `${this.rest_base}get-page`;\r\n            const data = { slug: 'thank-you' };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { this.page = result; });\r\n        },\r\n        downloadFiles: async function() {\r\n            const url = `${this.rest_base}download-files`;\r\n            const check = this.method === 'coupon' ? this.order.coupon_code : this.session;\r\n            const data = { ref: this.ref, method: this.method, check: check };\r\n            const headers = {\r\n                credentials: \"same-origin\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-WP-Nonce\": this.nonce,\r\n            };\r\n            fetch(url, { method: \"POST\", headers, body: JSON.stringify(data) })\r\n                .then((result) => result.json())\r\n                .then((result) => { \r\n                    if(Array.isArray(result)) {\r\n                        this.downloadables = result.files;\r\n                    } else {\r\n                        this.doCriticalError();\r\n                    }\r\n                });\r\n        },\r\n        doCriticalError: function() {\r\n            alert(\"Sorry. Looks like a critical error has occured. Please contact us for assistance.\");\r\n        },\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}